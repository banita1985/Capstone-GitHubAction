pipeline {
    agent any
    environment {
        SONARQUBE = 'SonarQubeServer'
    }
    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/banita1985/Sample-javawebapp.git'
            }
        }
        stage('Build') {
            steps {
                sh 'mvn clean install'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQubeServer') {
                    sh 'mvn sonar:sonar'
                }
            }
        }
        stage('Dependency Check') {
            steps {
                sh '~/tools/dependency-check/bin/dependency-check.sh --project MyApp --scan . --format ALL'
            }
        }
        stage('Docker Build') {
            steps {
                sh 'docker build -t myapp:latest .'
            }
        }
        stage('Image Scan with Trivy') {
            steps {
                sh 'trivy image myapp:latest || true'
            }
        }
        stage('Run Container') {
            steps {
                sh 'docker run -d -p 8085:8080 myapp:latest'
            }
        }
    }
}
